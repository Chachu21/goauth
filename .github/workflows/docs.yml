name: Documentation CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'README.md'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'README.md'
      - '.github/workflows/docs.yml'

jobs:
  # Check if changes are docs-only
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      docs-only: ${{ steps.filter.outputs.docs }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            docs:
              - 'docs/**'
              - 'README.md'
              - '.github/workflows/docs.yml'

  # Documentation validation
  validate-docs:
    name: Validate Documentation
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.docs-only == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd docs
          npm ci

      - name: Check documentation build
        run: |
          cd docs
          npm run build

      - name: Check for broken links
        run: |
          cd docs
          npm run lint

  # Documentation preview (for PRs)
  preview-docs:
    name: Preview Documentation
    runs-on: ubuntu-latest
    needs: changes
    if: github.event_name == 'pull_request' && needs.changes.outputs.docs-only == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd docs
          npm ci

      - name: Build documentation
        run: |
          cd docs
          npm run build

      - name: Deploy to Vercel (Preview)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./docs
          vercel-args: '--prod'

  # Documentation deployment (for main branch)
  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [changes, validate-docs]
    if: github.ref == 'refs/heads/main' && needs.changes.outputs.docs-only == 'true'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd docs
          npm ci

      - name: Build documentation
        run: |
          cd docs
          npm run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./docs
          vercel-args: '--prod' 